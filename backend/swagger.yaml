openapi: 3.0.0
info:
  title: Admin Panel API
  version: 1.0.0
  description: |
    API для управления товарами с поддержкой REST, GraphQL и WebSocket

servers:
  - url: http://localhost:3000
    description: Основной REST API сервер
  - url: ws://localhost:8000
    description: WebSocket сервер для реального времени

paths:
  /products:
    get:
      summary: Получить все товары
      responses:
        200:
          description: Список всех товаров
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
    post:
      summary: Создать новый товар
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Product'
      responses:
        201:
          description: Товар успешно создан
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'

  /products/{id}:
    put:
      summary: Обновить товар по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:

      responses:
        200:
          description: Товар обновлен
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        404:
          description: Товар не найден
          content:
            application/json:
              schema:

    delete:
      summary: Удалить товар по ID
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
      responses:
        204:
          description: Товар удален
        404:
          description: Товар не найден
          content:
            application/json:
              schema:

  /graphql:
    post:
      summary: Выполнить GraphQL операцию
      description: |        
        **Пример запроса:**
        ```graphql
        "query": "{ products(fields: [\"id\", \"name\"]) { id name } }",
           "variables": {
           "additionalProp1": {}
         }
        ```

      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                query:
                  type: string
                  description: GraphQL запрос
                  example: "query { products { id name } }"
                variables:
                  type: object
                  additionalProperties: true
                  description: Параметры для запроса
              required:
                - query
      responses:
        200:
          description: Успешный ответ
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: object
                    description: Результат запроса
                  errors:
                    type: array
                    items:
                      type: object
                    description: Ошибки выполнения
                example:
                  data:
                    products:
                      - id: 1
                        name: "Пример товара"
                        price: 100.0

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
        price:
          type: number
        description:
          type: string
        categories:
          type: array
          items:
            type: string